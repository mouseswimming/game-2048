*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

:root {
  --board-background: #ccc;
  --cell-background: #aaa;
  --body-color: #333;
}

body {
  background-color: var(--body-color);
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;

  margin: 0;
}

.grid-options {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1rem;
  font-weight: 500;
  column-gap: 0.5rem;
  margin-bottom: 1rem;
  color: white;
}

.grid-options button {
  background-color: lightgray;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 0.2rem;
  cursor: pointer;
}

@media screen and (max-width: 55rem) {
  .grid-options button {
    padding: 0.4rem 0.8rem;
  }
}

.grid-options button.selected {
  background-color: lightblue;
  cursor: default;
}

#game-board {
  font-size: var(--font-size);
  display: grid;
  grid-template-columns: repeat(var(--grid-size), var(--cell-size));
  grid-template-rows: repeat(var(--grid-size), var(--cell-size));
  background-color: var(--board-background);
  gap: var(--cell-gap);
  border-radius: 1vmin;
  border: var(--cell-gap) solid var(--board-background);
  position: relative;
}

.cell {
  background-color: var(--cell-background);
  border-radius: 1vmin;
}

.tile {
  position: absolute;
  width: var(--cell-size);
  height: var(--cell-size);
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: red;
  border-radius: 1vmin;

  left: calc(var(--x) * (var(--cell-size) + var(--cell-gap)));
  top: calc(var(--y) * (var(--cell-size) + var(--cell-gap)));

  font-weight: bold;
  background-color: hsl(200, 50%, var(--cell-bg-lightness));
  color: hsl(200, 25%, var(--cell-text-lightness));

  animation: show 200ms ease-in-out;
  transition: 100ms ease-in-out;
}

@keyframes show {
  0% {
    opacity: 0.5;
    transform: scale(0);
  }
}
